@model List<Postworthy.Models.Twitter.ITweet>
@using Postworthy.Models.Twitter
@{
    ViewBag.Title = ViewBag.Brand ?? "Postworthy";
    ViewBag.Home = true;
    const int PAGE_SIZE = 50;

    var page = 0;
    int.TryParse(Request.QueryString["page"], out page);
    page = page > -1 ? page : 0;

    var isPrimaryLoggedIn = Request.IsAuthenticated && Postworthy.Models.Account.UsersCollection.Single(User.Identity.Name) != null && Postworthy.Models.Account.UsersCollection.Single(User.Identity.Name).IsPrimaryUser && Postworthy.Models.Account.UsersCollection.PrimaryUser().CanAuthorize;
}

<div id="container" style="top:5px;">
    <div style="padding-top:2px;">
        @if (isPrimaryLoggedIn)
        {
            <style type="text/css">
                .icon-ok {
                    margin-left: 205px;
                }
            </style>
            using (Html.BeginForm("Tweet", "Home"))
            {
                <div class="box col-md-12">
                    <div style="padding: 5px 5px 5px 5px;">
                        <textarea id="Tweet" name="Tweet" rows="4" cols="1" style="width: 100%; border: 0;"></textarea>
                        <button id="btnTweet" type="submit" class="btn btn-primary btn-tweet" disabled>
                            <i class="glyphicon glyphicon-comment icon-white"></i>Tweet
                        </button>
                        <span id="characterCount" class="characterCount">140</span>
                    </div>
                </div>
            }
        }
        else if (!string.IsNullOrEmpty(Postworthy.Models.Account.UsersCollection.PrimaryUser().AdScript))
        {
            <div class="box adbox" style="padding: 5px 0px 5px 0px;">
                @Html.Raw(Postworthy.Models.Account.UsersCollection.PrimaryUser().AdScript)
            </div>
        }

        @if (Model != null)
        {

            var ranked = Model
                .Take(1000)
                .Distinct(Tweet.GetITweetTextComparer());

            if (!isPrimaryLoggedIn)
            {
                var featured = ranked
                    .Where(x => x.User.ScreenName.ToLower() == Postworthy.Models.Account.UsersCollection.PrimaryUser().TwitterScreenName.ToLower())
                    .ToList()
                    .OrderByDescending(x => x.CreatedAt)
                    .Take(3);


                Html.RenderPartial("_Featured", featured);

                ranked = ranked.Except(featured);
            }

            var top10 = ranked.Take(10);
            var top20 = ranked.Skip(10).Take(10);
            var top30 = ranked.Skip(20).Take(10);
            var index = 0;
            index = page * PAGE_SIZE;
            var HotTweets = ranked.Skip(index).Take(PAGE_SIZE).OrderByDescending(x => x.CreatedAt);
            var pageCount = Convert.ToInt32(Math.Ceiling(ranked.Count() / (1.0 * PAGE_SIZE)));
            var UserFilters = HotTweets
                .GroupBy(t => t.User.ScreenName)
                .Select(g => new
                {
                    UserName = g.FirstOrDefault().User.Name,
                    UserID = g.FirstOrDefault().User.UserID,
                    Image = g.FirstOrDefault().User.ProfileImageUrl,
                    HotTweets = g.Count()
                })
                .OrderByDescending(x => x.HotTweets)
                .ThenBy(x => x.UserName);

            if (UserFilters.Count() > 1)
            {
                <div class="box col-md-3 col-sm-4 filters hidden-xs" style="float:right;">
                    <div style="padding-bottom: 5px;height:46px;">
                        <div class="addthis_toolbox addthis_default_style addthis_32x32_style">
                            <a class="addthis_button_preferred_1"></a>
                            <a class="addthis_button_preferred_2"></a>
                            <a class="addthis_button_preferred_3"></a>
                            <a class="addthis_button_compact"></a>
                            <a class="addthis_counter addthis_bubble_style"></a>
                        </div>
                        <script type="text/javascript">
                            var addthis_config = { "data_track_clickback": true, services_exclude: 'print,email' };
                        </script>
                        <script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#pubid=xa-50085ad87233641c"></script>
                    </div>
                    <ul>
                        @foreach (var user in UserFilters)
                        {
                            <li class="filter @user.UserID" onclick="filterBy('@user.UserID')">
                                <img alt="@user.UserName" title="@user.UserName" src="@user.Image" class="profile-image-tiny" />
                                <i class="icon-ok glyphicon glyphicon-ok"></i>
                                @user.UserName

                                <span>@user.HotTweets</span>
                            </li>
                        }
                    </ul>
                </div>
                <script type="text/javascript">
                    function filterBy(userid) {
                        if (!$(".filter." + userid).hasClass("selected")) {
                            $(".filter").removeClass("selected");
                            $(".filter." + userid).addClass("selected");
                            $(".filter .icon-ok").hide();
                            $(".filter." + userid + " .icon-ok").show();


                            $(".post:hidden").show();
                            $(".post").not("." + userid).hide();
                        }
                        else {
                            $(".filter").removeClass("selected");
                            $(".filter .icon-ok").hide();
                            $(".post:hidden").show();
                        }
                    }
                </script>
            }

            foreach (Postworthy.Models.Twitter.ITweet tweet in HotTweets)
            {
                index++;
                var itemData = new Postworthy.Web.Models.ItemData()
                {
                    Model = tweet,
                    index = index,
                    isTop10 = top10.Contains(tweet),
                    isTop20 = top20.Contains(tweet),
                    isTop30 = top30.Contains(tweet),
                    randomImage = tweet.Links.Where(l => l.Image != null).OrderBy(x => Guid.NewGuid()).FirstOrDefault(),
                    hasVideo = tweet.Links.Where(l => l.Video != null).Count() > 0,
                    topN = (top10.Contains(tweet)) ? " top10" : (top20.Contains(tweet) ? " top20" : (top30.Contains(tweet) ? " top30" : "")),
                };

                Html.RenderPartial("_ItemBasic", itemData);
            }
            if (pageCount > 1)
            {
                <div class="box col-md-9 col-sm-8 text-center">
                    <ul class="pagination">
                        <li @Html.Raw(page == 0 ? "class=\"disabled\"" : "")><a @Html.Raw(page == 0 ? "" : "href=\"" + Url.Content("~/?page=" + Convert.ToInt32(Math.Max(page - 1, 0))) + "\"") ">«</a></li>
                        @for (int i = 0; i < pageCount; i++)
                        {
                            <li @Html.Raw(page == i ? "class=\"active\"" : "")><a href="@Url.Content("~/?page=" + i)">@(i + 1)</a></li>
                        }
                        <li @Html.Raw(page >= pageCount - 1 ? "class=\"disabled\"" : "")><a @Html.Raw(page >= pageCount - 1 ? "" : "href=\"" + Url.Content("~/?page=" + (page + 1)) + "\"") ">»</a></li>
                    </ul>
                </div>
            }
        }
        else
        {
            <div class="box span4">
                <div style="padding: 5px;">
                    @if (Request.IsAuthenticated && Postworthy.Models.Account.UsersCollection.Single(User.Identity.Name).IsPrimaryUser && Postworthy.Models.Account.UsersCollection.PrimaryUser().CanAuthorize)
                    {
                        <h1>
                            Hello, @User.Identity.Name! Welcome to the world of <a href="http://postworthy.org">
                                Postworthy
                            </a>!
                        </h1>
                        <h2>
                            You should run the streaming tool so that you can have some tweets to view. But make
                            sure that you have all the configuration settings correct first. For more information
                            on setting up your site visit the <a href="http://postworthy.org">
                                Postworthy Project
                                Page
                            </a> for setup instructions.
                        </h2>
                    }
                    else
                    {
                        <h1>
                            Sorry no tweets to view at this time. Please try again later.
                        </h1>
                    }
                </div>
            </div>
        }
    </div>
</div>
</div>
@section scripts{
    <script src="~/Scripts/jquery.signalR-2.0.1.min.js"></script>
    <script src="~/signalr/hubs" type="text/javascript"></script>
    @if (page == 0)
    {
        //Only listen for live updates in you are on the front page

        <script type="text/javascript">
            var availableUpdates = new Array();
            var stream = null;

            $(function () {
                stream = $.connection.streamingHub;

                if (stream) {
                    stream.update = function (data) {
                        $(data).each(function (i, o) {
                            availableUpdates.unshift(o);
                        });
                        updateNotification();
                    };
                    $.connection.hub.start();
                }
            });

            function loadUpdates() {
                $(".update-notification").remove();
                $(".postIndex").each(function (i, o) {
                    $(o).html("#" + (parseInt($(o).html().replace("#", "")) + availableUpdates.length));
                });
                $(availableUpdates).each(function (i, o) {
                    var x = $(o);
                    $(".postIndex", x).html("#" + (availableUpdates.length - i))
                    $(".filters").after(x);
                });
                availableUpdates = new Array();
                updateLayout();
                afterImagesLoad();
            }

            function updateNotification() {
                if ($(".update-notification").length > 0)
                    $(".update-notification").remove();

                $(".filters").before($('<div class="update-notification box alert alert-info"><button type="button" class="close" data-dismiss="alert">×</button>There are ' + availableUpdates.length + ' new updates available! <a class="btn" href="#" onclick="loadUpdates();return false;">Load Updates</a></div>'));

                updateLayout();
            }
        </script>
    }

    @if (isPrimaryLoggedIn)
    {
        <script src="~/Scripts/jquery.watermark.min.js" type="text/javascript"></script>
        <script type="text/javascript">
            $(function () {
                var supportOnInput = 'oninput' in document.createElement('input');

                var btn = $("#btnTweet")
                var tweet = $("#Tweet");
                var maxLength = 140;

                var el = $("#characterCount");

                tweet.bind(supportOnInput ? 'input' : 'keyup', function () {
                    var cc = tweet.val().length;

                    if (cc > 0)
                        btn.removeAttr("disabled");
                    else
                        btn.attr("disabled", "disabled");

                    el.text(maxLength - cc);

                    if (maxLength < cc) {
                        el.css('color', 'red');
                    } else {
                        el.css('color', '#ccc');
                    }
                });

                tweet.watermark('Start typing here to tweet something!');
            });
        </script>
    }
}