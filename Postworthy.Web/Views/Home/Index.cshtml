@model List<Postworthy.Models.Twitter.ITweet>
@{
    ViewBag.Title = ViewBag.Brand ?? "Postworthy";
    ViewBag.Home = true;
}
<style>
    .profile-image-tiny
    {
        width: 20px;
        height: 20px;
        float: left;
        padding-right: 3px;
    }
    .profile-image-small
    {
        width: 25px;
        height: 25px;
        float: left;
        padding-right: 3px;
        padding-bottom: 5px;
    }
    .tweet-info
    {
        height: 25px;
        float: left;
        font-size: 10px;
        padding-bottom: 5px;
        line-height: 12px;
    }
    .btn-tweet
    {
        float: right;
        margin: 5px 0px 5px 0px;
    }
    #characterCount
    {
        float: right;
        font-size: 16px;
        font-weight: bold;
        color: #ccc;
        line-height: 28px;
        padding-right: 4px;
        margin: 5px 0px 5px 0px;
    }
    .box
    {
        border-top: 4px solid #DCB;
    }
    .adbox
    {
        margin-left: 101px;
        border: none;
    }
    .box a
    {
        word-wrap: break-word;
        overflow-wrap: break-word;
    }
    .box ul
    {
        margin: 0;
        list-style: none;
        padding-bottom: 5px;
        padding-top: 3px;
    }
    .box li
    {
        line-height: 18px;
        font-size: 11px;
        font-family:"lucida grande",tahoma,verdana,arial,sans-serif;
        color:#333;
        padding-top: 2px;
        cursor: pointer;
        border-radius: 0 2px 2px 0;
        -webkit-border-radius:0 2px 2px 0;
    }
    .selected
    {
        background-color: #D8DFEA;
    }
    .box li:hover
    {
        background-color: #D8DFEA;
    }
    .box li img
    {
        width:18px;
        height:18px;
    }
    .icon-ok
    {
        position:absolute;
        float:left;
        margin-left: -37px;
        display: none;
    }
    .icon-ok:hover
    {
        background-position: -312px 0;
    }
    .box li span
    {
        height: 13px;
        padding-left: 5px;
        padding-right: 5px;
        color: #3B5998;
        background-color: #D8DFEA;
        float: right;
        font-size: 9px;
        border-radius: 2px;
        -webkit-border-radius: 2px;
        text-align: center;
        line-height: 13px;
        font-weight: bold;
        position: absolute;
        right: 0px;
    }
    .col1
    {
        width: 225px;
    }
    .col2
    {
        width: 460px;
    }
    .col3
    {
        width: 695px;
    }
    .col4
    {
        width: 930px;
    }
    .newest
    {
        background-color: #E6F0F5;
    }
    .top10
    {
        
    }
    .top20
    {
        
    }
    .top30
    {
        
    }
    .postIndex
    {
        float: right;
        font-size: 16px;
        font-weight: bold;
        color: #ccc;
        line-height: 28px;
        padding-right: 4px;
    }
</style>
<script src="@Url.Content("~/Scripts/jquery.masonry.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        $('#container').masonry({ itemSelector: '.box:visible', columnWidth: 235 });

        $('#container').imagesLoaded(function () {
            $('.tweet-image-div').css('max-height', '100px').css('height', 'auto');
            $('#container').masonry('reload');
        });
    });
</script>
<div id="container">
    <div>
        @if (Request.IsAuthenticated && Postworthy.Models.Account.UsersCollection.Single(User.Identity.Name).IsPrimaryUser && Postworthy.Models.Account.UsersCollection.Single(User.Identity.Name).CanAuthorize)
        {
            <script src="@Url.Content("~/Scripts/jquery.watermark.min.js")" type="text/javascript"></script>
            <script type="text/javascript">
                $(function () {
                    var supportOnInput = 'oninput' in document.createElement('input');

                    var btn = $("#btnTweet")
                    var tweet = $("#Tweet");
                    var maxLength = 140;

                    var el = $("#characterCount");

                    tweet.bind(supportOnInput ? 'input' : 'keyup', function () {
                        var cc = tweet.val().length;

                        if (cc > 0)
                            btn.removeAttr("disabled");
                        else
                            btn.attr("disabled", "disabled");

                        el.text(maxLength - cc);

                        if (maxLength < cc) {
                            el.css('color', 'red');
                        } else {
                            el.css('color', '#ccc');
                        }
                    });

                    tweet.watermark('Start typing here to tweet something!');
                });
            </script>
            <style type="text/css">
            .icon-ok
            {
                margin-left: 205px;
            }
            </style>
            using (Html.BeginForm("Tweet", "Home"))
            {
            <div class="box col3">
                <div style="padding: 5px 5px 5px 5px;">
                    <textarea id="Tweet" name="Tweet" rows="4" cols="1" style="width: 685px; border: 0;"></textarea>
                    <button id="btnTweet" type="submit" class="btn btn-primary btn-tweet" disabled>
                        <i class="icon-comment icon-white"></i>Tweet
                    </button>
                    <span id="characterCount" class="characterCount">140</span>
                </div>
            </div>
            }
        }
        else if (!string.IsNullOrEmpty(Postworthy.Models.Account.UsersCollection.PrimaryUser().AdScript))
        {
            <div class="box adbox col4">
                @Html.Raw(Postworthy.Models.Account.UsersCollection.PrimaryUser().AdScript)
            </div>
        }
        @if (Model != null)
        {
            var ranked = Model.OrderByDescending(t => t.TweetRank);
            var top10 = ranked.Take(10);
            var top20 = ranked.Skip(10).Take(10);
            var top30 = ranked.Skip(20).Take(10);
            var index = 0;
			var page = 0;
            int.TryParse(Request.QueryString["page"], out page);
			page = page > -1 ? page : 0;
			index = page * 100;
            var HotTweets = ranked.Skip(index).Take(100).OrderByDescending(x => x.CreatedAt);
			var pageCount = Convert.ToInt32(Math.Ceiling(ranked.Count() / 100.0));
            var UserFilters = HotTweets
                .GroupBy(t => t.User.Identifier.ScreenName)
                .Select(g => new
                {
                    UserName = g.FirstOrDefault().User.Name,
                    UserID = g.FirstOrDefault().User.Identifier.ID,
                    Image = g.FirstOrDefault().User.ProfileImageUrl,
                    HotTweets = g.Count()
                })
                .OrderByDescending(x=>x.HotTweets)
                .ThenBy(x=>x.UserName);

            if (UserFilters.Count() > 1)
            {
            <div class="box col1">
                <ul>
                @if(index == 0)
                {
                    <li class="filter top10" onclick="filterBy('top10')">
                        <i style="width:18px;height:18px;" class="icon-fire"></i>
                        <i class="icon-ok"></i>
                        Top 10
                        <span>@top10.Count()</span>
                    </li>
                    <li class="filter top20" onclick="filterBy('top20')">
                        <i style="width:18px;height:18px;" class="icon-fire"></i>
                        <i class="icon-ok"></i>
                        Top 11-20
                        <span>@top20.Count()</span>
                    </li>
                    <li class="filter top30" onclick="filterBy('top30')" style="border-bottom: 4px solid #DCB">
                        <i style="width:18px;height:18px;" class="icon-fire"></i>
                        <i class="icon-ok"></i>
                        Top 21-30
                        <span>@top30.Count()</span>
                    </li>
                 }   
                    @foreach (var user in UserFilters)
                    {
                        <li class="filter @user.UserID" onclick="filterBy('@user.UserID')">
                            <img alt="@user.UserName" title="@user.UserName" src="@user.Image" class="profile-image-tiny" />
                            <i class="icon-ok"></i>
                            @user.UserName
                            
                            <span>@user.HotTweets</span>
                        </li>
                    }
                </ul>
            </div>
            <script type="text/javascript">
                function filterBy(userid) {
                    if (!$(".filter." + userid).hasClass("selected")) {
                        $(".filter").removeClass("selected");
                        $(".filter." + userid).addClass("selected");
                        $(".filter .icon-ok").hide();
                        $(".filter." + userid + " .icon-ok").show();


                        $(".post:hidden").show();
                        $(".post").not("." + userid).hide();
                        $('#container').masonry('reload');
                    }
                    else {
                        $(".filter").removeClass("selected");
                        $(".filter .icon-ok").hide();
                        $(".post:hidden").show();
                        $('#container').masonry('reload');
                    }
                }
            </script>
            }

            foreach (Postworthy.Models.Twitter.ITweet tweet in HotTweets)
            {
                index++;
                var isTop10 = top10.Contains(tweet);
                var isTop20 = top20.Contains(tweet);
                var isTop30 = top30.Contains(tweet);
                var randomImage = tweet.Links.Where(l => l.Image != null).OrderBy(x => Guid.NewGuid()).FirstOrDefault();
                var hasVideo = tweet.Links.Where(l => l.Video != null).Count() > 0;

                var topN = (isTop10) ? " top10" : (isTop20 ? " top20" : (isTop30 ? " top30" : ""));

                int RetweetThreshold = Postworthy.Models.Account.UsersCollection.PrimaryUser().RetweetThreshold;
            
            <div class="@tweet.User.Identifier.ID post box @((hasVideo) ? "col2" : "col1")@(tweet.RetweetCount > RetweetThreshold && tweet.RetweetCount < 15 ? " newest" : "")@(topN)">
                <div style="padding: 5px;">
                    <a href="@tweet.User.Url" title="@tweet.User.Identifier.ScreenName" target="_blank">
                        <img alt="@tweet.User.Identifier.ScreenName" title="@tweet.User.Identifier.ScreenName" src="@tweet.User.ProfileImageUrl" class="profile-image-small" />
                    </a>
                    <div class="tweet-info">
                        Created @tweet.TweetTime
                        <br />
                        <i class="icon-retweet"></i>@((tweet.RetweetCount > 0) ? tweet.RetweetCount + " Retweets" : "Not yet retweeted")
                        [<a title="Retweet This" href="@(Url.Content("~/home/retweet/" + tweet.StatusID))"><b>Retweet</b></a>]
                    </div>
                    <span class="postIndex">#@index</span>
                    <hr style="clear: both;" />
                    @if (randomImage != null)
                    {
                        <div class="tweet-image-div">
                            <img src="@randomImage.Image.ToString()" />
                        </div>
                    }
                    @if (isTop10)
                    { 
                        <h3>@Html.Raw(tweet.TweetText)</h3>
                    }
                    else if (isTop20)
                    { 
                        <h4>@Html.Raw(tweet.TweetText)</h4>
                    }
                    else if (isTop30)
                    { 
                        <h5>@Html.Raw(tweet.TweetText)</h5>
                    }
                    else
                    {
                        @Html.Raw(tweet.TweetText)
                    }
                    @if (hasVideo)
                    {
                        <hr style="clear: both;" />
                        foreach (var link in tweet.Links.Where(l => l.Video != null))
                        {
                            if (link.Video.Authority.ToLower().Contains("youtube"))
                            {            
                        <iframe width="320" height="215" src="@link.Video.ToString()?wmode=transparent" frameborder="0" allowfullscreen>
                        </iframe>
                            }
                            else
                            {
                        <a target="_blank" href="@link.Video">
                            <h3>
                                WATCH VIDEO</h3>
                            <img src="@Url.Content("~/Content/images/video-player-icon.png")" style="width:320;height:196px" />
                        </a>
                            }
                        }
                    }
                    @if (tweet.Links.Where(l => l.Image == null && l.Video == null).Count() > 0)
                    {
                        <hr style="clear: both;" />
                        var links = tweet.Links.Where(l => l.Image == null && l.Video == null).Distinct();
                        foreach (var link in links)
                        {
                        <li><a target="_blank" href="@link.Uri">@link.Title</a></li>
                        }
                    }
                </div>
            </div>
            }
            if (pageCount > 1)
            {
            <div class="box col4 pagination pagination-centered">
				<ul>
				<li @Html.Raw(page == 0 ? "class=\"disabled\"" : "")><a @Html.Raw(page == 0 ? "" : "href=\"" + Url.Content("~/?page=" + Convert.ToInt32(Math.Max(page - 1, 0))) + "\"")">«</a></li>
                @for (int i = 0; i < pageCount; i++)
				{
                    <li @Html.Raw(page == i ? "class=\"active\"" : "")><a href="@Url.Content("~/?page=" + i)">@(i + 1)</a></li>
				}
				<li @Html.Raw(page >= pageCount-1 ? "class=\"disabled\"" : "")><a @Html.Raw(page >= pageCount-1 ? "" : "href=\"" + Url.Content("~/?page=" + (page + 1)) + "\"")">»</a></li>
				</ul>
            </div>
            }
        }
        else
        {
            <div class="box span4">
                <div style="padding: 5px;">
                    @if (Request.IsAuthenticated && Postworthy.Models.Account.UsersCollection.Single(User.Identity.Name).IsPrimaryUser && Postworthy.Models.Account.UsersCollection.PrimaryUser().CanAuthorize)
                    {
                        <h1>
                            Hello, @User.Identity.Name! Welcome to the world of <a href="http://postworthy.org">
                                Postworthy</a>!</h1>
                        <h2>
                            You should run the update tool so that you can have some tweets to view. But make
                            sure that you have all the configuration settings correct first. For more information
                            on setting up your site visit the <a href="http://postworthy.org">Postworthy Project
                                Page</a> for setup instructions.
                        </h2>
                    }
                    else
                    {
                        <h1>
                            Sorry no tweets to view at this time. Please try again later.</h1>
                    }
                </div>
            </div>
        }
    </div>
</div>
