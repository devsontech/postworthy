@model Postworthy.Models.Web.ArticleStubPage
@using Postworthy.Models.Twitter
@using Postworthy.Models.Core
@{
    DateTime date = ViewBag.Date;
    ViewBag.Title = ViewBag.Brand ?? "Postworthy";
    ViewBag.Home = true;
    var PrimaryUser = Postworthy.Models.Account.UsersCollection.PrimaryUsers().Where(u => u.IsPrimaryUser).FirstOrDefault();
    var user = Postworthy.Models.Account.UsersCollection.Single(User.Identity.Name);
    var isPrimaryLoggedIn = Request.IsAuthenticated && user != null && user.IsPrimaryUser && user.CanAuthorize;

    Model.ArticleStubs = Model.ArticleStubs.Distinct().Where(x => !Model.ExcludedArticleStubs.Contains(x)).ToList();

    var photoStubs = Model.ArticleStubs.Where(s => Postworthy.Web.Controllers.HomeController.IMAGE_DOMAINS.Contains(s.Link.Authority.ToLower())).ToList();

    Model.ArticleStubs = Model.ArticleStubs.Where(x => !photoStubs.Contains(x)).ToList();

    IEnumerable<Postworthy.Models.Web.ArticleIndex.Index> articles = ViewBag.ArticlesIndex.Articles;
    if (articles != null)
    {
        articles = articles.OrderByDescending(x => x.Published);
    }
}

<div id="container">
    <div>

        @*<div class="box adbox col-md-10 col-md-offset-1" style="padding: 5px 0px 5px 0px;">
                @Html.Raw(Postworthy.Models.Account.UsersCollection.PrimaryUser().AdScript)
            </div>*@

        @if (Model != null)
        {
            if (Model.ArticleStubs.Count() > 0)
            {
                var index = 1;
                var featuredStub1 = Model.ArticleStubs.First();
                var guid = Guid.NewGuid().ToString();
                System.Web.HttpContext.Current.Cache.Add(
                    guid,
                    featuredStub1.Image ?? "",
                    null,
                    DateTime.Now.AddDays(1),
                    System.Web.Caching.Cache.NoSlidingExpiration,
                    System.Web.Caching.CacheItemPriority.Normal,
                    null);
                @section meta{
                    <meta name="twitter:card" data-page-subject="true" content="summary" />
                    <meta name="twitter:title" data-page-subject="true" content="@featuredStub1.Title" />
                    <meta name="twitter:description" data-page-subject="true" content="@featuredStub1.GetSummary(200)" />
                    <meta name="twitter:image" data-page-subject="true" content="@Url.RouteUrl("default", new RouteValueDictionary(new { action="image", id=guid }), Request.Url.Scheme, Request.Url.Host)" />
                }
                using (Html.BeginForm())
                {
                    <div class=" post box col-md-10 col-md-offset-1 col-sm-10 col-sm-offset-1" style="font-size:large;line-height:1em;clear:both">
                        <!--<span class="postIndex">Top Story</span>
                        <hr style="clear: both;" />-->
                        @if (isPrimaryLoggedIn)
                        {
                            <button type="submit" class="btn btn-danger btn-xs removeButton" value="@featuredStub1.GetSlug()" name="slug">
                                <span class="glyphicon glyphicon-remove"></span>
                            </button>
                        }
                        @if (!string.IsNullOrEmpty(featuredStub1.Image))
                        {
                            <div class="imageDiv" style="height:200px;background-image: url('data:image/jpg;base64,@featuredStub1.Image');">
                            </div>
                        }
                        <a class="articleTitle outbound" href="@featuredStub1.Link.ToString()" data-out="@Url.Content("~/home/out/" + date.ToShortDateString().Replace('/','-') + "/" + featuredStub1.GetSlug())">
                            @Html.Raw(featuredStub1.Title)
                        </a>
                        <p>
                            @Html.Raw(featuredStub1.GetSummary())
                        </p>
                        <div style="clear: both; margin: 5px 0px 5px 0px;"></div>
                    </div>
                    <div class="col-md-7 col-sm-7 col-md-offset-1 col-sm-offset-1" style="padding-bottom:20px">
                        @foreach (var stub in Model.ArticleStubs.Skip(1).Take(49))
                        {
                            <div class="post box" style="padding-bottom:20px;">
                                @if (index == 1)
                                {
                                    <span class="postIndex">Top News</span>
                                    <hr style="clear: both;" />
                                }
                                <span class="postIndex2">@(++index)</span>
                                @if (isPrimaryLoggedIn)
                                {
                                    <button type="submit" class="btn btn-danger btn-xs removeButton" value="@stub.GetSlug()" name="slug">
                                        <span class="glyphicon glyphicon-remove"></span>
                                    </button>
                                }
                                @if (!string.IsNullOrEmpty(stub.Image))
                                {
                                    <div class="imageDiv" style="background-image: url('data:image/jpg;base64,@stub.Image');">
                                    </div>
                                }
                                <a class="articleTitle outbound" href="@stub.Link.ToString()" data-out="@Url.Content("~/home/out/" + date.ToShortDateString().Replace('/','-') + "/" + stub.GetSlug())">
                                    @Html.Raw(stub.Title)
                                </a>
                                <p>
                                    @Html.Raw(stub.GetSummary())
                                </p>
                                <div style="clear: both;margin: 5px 0px 0px 0px;"></div>
                            </div>
                        }
                        @foreach (var stub in Model.ArticleStubs.Skip(50).Take(50))
                        {
                            <div class="post box" style="padding-top:5px;">
                                <span class="postIndex2">@(++index)</span>
                                @if (isPrimaryLoggedIn)
                                {
                                    <button type="submit" class="btn btn-danger btn-xs removeButton" value="@stub.GetSlug()" name="slug">
                                        <span class="glyphicon glyphicon-remove"></span>
                                    </button>
                                }
                                <a class="articleTitle outbound" href="@stub.Link.ToString()" data-out="@Url.Content("~/home/out/" + date.ToShortDateString().Replace('/','-') + "/" + stub.GetSlug())">
                                    @Html.Raw(stub.Title)
                                </a>
                                <div style="clear: both;margin: 5px 0px 0px 0px;"></div>
                            </div>
                        }
                    </div>
                    <div class="col-md-3 col-sm-3">
                        @if (!string.IsNullOrEmpty(PrimaryUser.AdScript))
                        {
                            <span class="postIndex pull-left">Related</span>
                            <hr style="clear: both;" />
                            <div class="box" style="width:100%;overflow:hidden;padding: 5px 0px 5px 0px;">
                                @Html.Raw(PrimaryUser.AdScript)
                            </div>
                        }
                        @if (articles != null && articles.Count() > 0)
                        {
                            <span class="postIndex pull-left">Latest Articles</span>
                            <hr style="clear: both;" />
                            <div class="post box clearfix">
                                @foreach (var item in articles.Take(5))
                                {
                                    <a style="display: block; margin-bottom: 10px" href="~/Article/Details/@(item.ID())/@(item.GetSlug())">@Html.Raw(item.Title)</a>
                                }
                            </div>
                            <a style="display: block; margin-bottom: 10px" href="~/Article/Index/0">[View All Articles]</a>
                        }
                        @if (photoStubs.Count > 0)
                        {
                            int i = 0;
                            <div class="post box clearfix">
                                <span class="postIndex pull-left">Photos</span>
                                <hr style="clear: both;" />
                                @foreach (var stub in photoStubs)
                                {
                                    <a class="outbound" href="@stub.Link.ToString()" title="@stub.Title.Replace("\"","")">
                                        <div class="col-md-6 col-sm-6 col-xs-6" data-squared="height" style="@(i++ % 2 == 0 ? "clear:left;" : "")border: solid 1px #fff;margin:0px;padding:0px;background-size:cover;background-image: url('data:image/jpg;base64,@stub.Image');">
                                        </div>
                                    </a>
                                    if (i % 10 == 0)
                                    {
                                        break;
                                    }
                                }
                            </div>
                            <a style="display: block; margin-bottom: 10px" href="~/@date.ToShortDateString().Replace('/','-')/photos">[View All Photos]</a>
                        }
                        @if (Model.ArticleStubs.Any(s => s.Video != null))
                        {
                            <div class="post box clearfix">
                                <span class="postIndex pull-left">Videos</span>
                                <hr style="clear: both;" />
                                @{
                            var videoStubs = Model.ArticleStubs.Where(s => s.Video != null);
                                }
                                @foreach (var vs in videoStubs)
                                {
                                    if (vs.Video.Authority.ToLower().Contains("youtube"))
                                    {
                                        <a style="display:block;margin-bottom:10px" href="@Url.Content("~/" + date.ToShortDateString().Replace('/', '-') + "/" + vs.GetSlug())">
                                            @Html.Raw(@vs.Title)
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="outbound" style="display: block; margin-bottom: 10px" href="@vs.Video.ToString()">@Html.Raw(@vs.Title)</a>
                                    }
                                }
                            </div>
                            <a style="display: block; margin-bottom: 10px" href="~/@date.ToShortDateString().Replace('/','-')/videos">[View All Videos]</a>
                        }
                        <div class="post box">
                            <span class="postIndex pull-left">Archives</span>
                            <hr style="clear: both;" />
                            @{
                        Postworthy.Models.Web.ArticleStubIndex articleStubIndex = ViewBag.ArticleStubIndex;
                        var archivedPages = articleStubIndex.ArticleStubPages.OrderByDescending(x => x.Key).Take(10);
                            }
                            @foreach (var kvp in archivedPages)
                            {
                                <a style="display: block; margin-bottom: 10px" href="~/@kvp.Value.Replace('/','-')">@(DateTime.Parse(kvp.Value).ToString("MMMM dd yyyy"))</a>
                            }
                            <a style="display: block; margin-bottom: 10px" href="~/home/archive/all">[View All Archives]</a>
                        </div>
                    </div>
                }
            }
        }
        else
        {
            <div class="box col-md-10 col-md-offset-1">
                <div style="padding: 5px;">
                    @if (Request.IsAuthenticated && user != null && user.IsPrimaryUser && user.CanAuthorize)
                    {
                        <h1>
                            Hello, @User.Identity.Name! Welcome to the world of <a href="http://postworthy.org">
                                Postworthy
                            </a>!
                        </h1>
                        <h2>
                            You should run the streaming tool as well as the web content tool so that you can have some content to view.
                            But make sure that you have all the configuration settings correct first. For more information
                            on setting up your site visit the <a href="http://postworthy.org">
                                Postworthy Project
                                Page
                            </a> for setup instructions.
                        </h2>
                    }
                    else
                    {
                        <h1>
                            Sorry no content to view at this time. Please try again later.
                        </h1>
                    }
                </div>
            </div>
        }
    </div>
</div>
@section scripts{
    <script type="text/javascript" src="~/Scripts/smartResize.js"></script>
    <script type="text/javascript" src="~/Scripts/squaredUp.js"></script>
    <script type="text/javascript">
        $(".outbound").on("click",function (e) {
            if ($(this).attr("data-out")) {
                document.location = $(this).attr("data-out");
                return false;
            }
        })
    </script>
}